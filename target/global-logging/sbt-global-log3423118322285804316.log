[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\pc\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\pc\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Amazon.com Inc. Java 1.8.0_322)
[debug]       Load.loadUnit: plugins took 284.2098ms
[debug]       Load.loadUnit: defsScala took 0.8469ms
[debug] [Loading] Scanning directory C:\Users\pc\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\pc\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 252.8303 ms
[debug]           Load.resolveProject(global-plugins) took 211.2631ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\pc\.sbt\1.0\plugins, plugins: List(<none>))) took 540.2036ms
[debug] [Loading] Done in C:\Users\pc\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 642.0388ms
[debug]       Load.loadUnit: cleanEvalClasses took 1.8355ms
[debug]     Load.loadUnit(file:/C:/Users/pc/.sbt/1.0/plugins/, ...) took 953.668ms
[debug]   Load.apply: load took 1613.5027ms
[debug]   Load.apply: resolveProjects took 22.9531ms
[debug]   Load.apply: finalTransforms took 256.6744ms
[debug]   Load.apply: config.delegates took 48.8012ms
[debug]   Load.apply: Def.make(settings)... took 1704.1203ms
[debug]   Load.apply: structureIndex took 507.7258ms
[debug]   Load.apply: mkStreams took 4.4611ms
[info] loading global plugins from C:\Users\pc\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 11394.9099ms
[debug]           Load.loadUnit: plugins took 89.2248ms
[debug]           Load.loadUnit: defsScala took 0.0174ms
[debug] [Loading] Scanning directory C:\Users\pc\IdeaProjects\untitled3\project
[debug]             Load.loadUnit: mkEval took 15.075ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\pc\IdeaProjects\untitled3\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.8528 ms
[info] loading settings for project untitled3-build from idea.sbt ...
[debug]               Load.resolveProject(untitled3-build) took 151.4146ms
[debug]             Load.loadTransitive: finalizeProject(Project(id untitled3-build, base: C:\Users\pc\IdeaProjects\untitled3\project, plugins: List(<none>))) took 159.2876ms
[debug] [Loading] Done in C:\Users\pc\IdeaProjects\untitled3\project, returning: (untitled3-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 726.8626ms
[debug]           Load.loadUnit: cleanEvalClasses took 43.3058ms
[debug]         Load.loadUnit(file:/C:/Users/pc/IdeaProjects/untitled3/project/, ...) took 861.5448ms
[debug]       Load.apply: load took 863.9356ms
[debug]       Load.apply: resolveProjects took 0.2217ms
[debug]       Load.apply: finalTransforms took 29.5396ms
[debug]       Load.apply: config.delegates took 1.0274ms
[debug]       Load.apply: Def.make(settings)... took 580.4906ms
[debug]       Load.apply: structureIndex took 170.9072ms
[debug]       Load.apply: mkStreams took 0.004ms
[info] loading project definition from C:\Users\pc\IdeaProjects\untitled3\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4292.8681ms
[debug]     Load.loadUnit: defsScala took 0.0047ms
[debug] [Loading] Scanning directory C:\Users\pc\IdeaProjects\untitled3
[debug]       Load.loadUnit: mkEval took 0.5379ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\pc\IdeaProjects\untitled3, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.6859 ms
[info] loading settings for project untitled3 from build.sbt ...
[debug]         Load.resolveProject(untitled3) took 184.4265ms
[debug]       Load.loadTransitive: finalizeProject(Project(id untitled3, base: C:\Users\pc\IdeaProjects\untitled3, plugins: List(<none>))) took 192.519ms
[debug] [Loading] Done in C:\Users\pc\IdeaProjects\untitled3, returning: (untitled3)
[debug]     Load.loadUnit: loadedProjectsRaw took 1137.9939ms
[debug]     Load.loadUnit: cleanEvalClasses took 66.4938ms
[debug]   Load.loadUnit(file:/C:/Users/pc/IdeaProjects/untitled3/, ...) took 5501.3985ms
[debug] Load.apply: load took 5511.869ms
[debug] Load.apply: resolveProjects took 0.1588ms
[debug] Load.apply: finalTransforms took 84.7227ms
[debug] Load.apply: config.delegates took 0.4933ms
[debug] Load.apply: Def.make(settings)... took 185.3073ms
[debug] Load.apply: structureIndex took 32.7142ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to untitled3 (in build file:/C:/Users/pc/IdeaProjects/untitled3/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
